@startuml sequence
actor       Artist       as artist
actor       Buyer       as buyer
entity Frontend as front
entity    Backend    as backend
entity WalletManager as walletM
entity BlockchainNode as bnode
entity Hasura as hasura
database    IndexerDB    as indexerDB
participant GenTKProject as gentkp
participant GenTK as gentk
participant MarketplaceContract as marketplaceContract
queue       RenderingPipeline as render_pipe
database    DecentralizedMediaCluster    as decMedCluster

group Project creation
artist -> front : createProject()
front -> decMedCluster : uploadProject()
front -> decMedCluster : uploadProjectMetadata()
front -> bnode : send_tx()
bnode -> gentkp : createProject()
end

group Token minting
buyer -> front: mint_project()
front -> bnode: send_tx()
bnode -> gentkp: mint_project()
gentkp -> gentkp: check_minting_window()
gentkp -> gentkp: check_amount()
gentkp -> gentkp: check_minted_out()
gentkp -> gentk: mint()
end

group Token reaveal
backend -> render_pipe: generate_images()
render_pipe -> decMedCluster: generate_images()

backend -> walletM: reveal_metadata()
backend -> decMedCluster: upload_revealed_metadata()
walletM -> bnode: send_tx()
bnode -> gentk: reveal_metadata()
end
@enduml
